#!usr/bin/env python3.5
'''
Plink 1.9's --r2 function has a filtering function that filters r2 values below 0.2, and can be reduced
to a minimum value of 0 (inclusive) - this effectively filters out any evidence of linkage equilibrium, and
there is no way that I know of to remove the filter entirely.

zerocorrector.py corrects plink's filtering of r2 = 0 correlations by finding valid pairs without a reported r2 value
and adds them in with a value of zero. This is working off the assumption that anything without an r2 value is indeed at linkage 
equilibrium and has not been filtered out for some other cryptic reason.

(This script is hardcoded for a plink window size of 100000, but the ranger() function can be modified if necessary)

This must take in input generated by r2corrector.R - this is because the plink files are not evenly
space-separated (I know there's a way to correct for that in python itself when importing an .ld file
into a pandas df, but eh)

usage:
python3.5 zerocorrector.py <df file> > <outfile name>

eg python3.5 zerocorrector.py chromosome1.ld > chromosome1r2.txt

AH - 04/2017

'''

import sys
import pandas as pd
from tqdm import tqdm

def ranger(snppos, df):
    '''Takes a SNP position, a df of all pairwise comparisons,
    and returns positions of SNPs that haven't been subject to comparisons.'''
    subdf = df[df.pos1 == snppos] # existing r2 calculations
    totrange = df[[all([a, b]) for a, b in zip(df.pos2 <= snppos + 100000, df.pos2 > snppos)]] # all pairs
    inrange = [int(num[0]) for num in subdf[['pos2']].values.tolist()]
    totrange = [int(num[0]) for num in totrange[['pos2']].values.tolist()]
    snplist = [pos for pos in totrange if pos not in inrange] # list of excluded pairs
    snplist = list(set(snplist))
    return snplist

def zeroadder(df, snp):
    '''Given a SNP and a df of correlations, appends the df with correlations
    that weren't done by plink and gives them zero values.'''
    snplist = ranger(snp, df)
    if snplist:
        for num in snplist:
            print(snp, num, 0)
    if not snplist: # ie snplist is empty
        pass

def pairwisedoer(df):
    '''Applies zeroadder across all SNPs in a df.'''
    allsnps = [int(num[0]) for num in df[['pos1']].values.tolist()]
    for snp in allsnps:
        snp = int(snp)
        out = zeroadder(df, snp)
        if out is not None:
            print(out)
    
# analysis

dfname = str(sys.argv[1])
data = pd.read_csv(dfname, header = 'infer') # read in file
data.drop(data.columns[[0]], axis = 1, inplace = True) # cleanup

print('pos1', 'pos2', 'r2') # initialize headers

for i in tqdm(range(data.shape[0])):
    print(int(data.iloc[i,0]), int(data.iloc[i,1]), data.iloc[i,2])

pairwisedoer(data) 
